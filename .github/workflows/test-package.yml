name: Test package against Go versions

on: [ push ]
jobs:
  test:
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        working-directory: 'go/src/github.com/bugsnag/bugsnag-go-performance' # relative to $GITHUB_WORKSPACE
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        go-version: ['1.19', '1.20', '1.21', '1.22', '1.23']
        otel-version: ['1.17.0', '1.18.0', '1.19.0', '1.20.0', '1.21.0', '1.23.0', '1.24.0', '1.25.0', '1.26.0', '1.27.0', '1.28.0', '1.29.0'] # commented out version 1.22 as it has a problem with semconv version 1.21.0
        exclude:
          - go-version: '1.19'
            otel-version: '1.25.0'
          - go-version: '1.19'
            otel-version: '1.26.0'
          - go-version: '1.19'
            otel-version: '1.27.0'
          - go-version: '1.19'
            otel-version: '1.28.0'
          - go-version: '1.19'
            otel-version: '1.29.0'
          - go-version: '1.20'
            otel-version: '1.25.0'
          - go-version: '1.20'
            otel-version: '1.26.0'
          - go-version: '1.20'
            otel-version: '1.27.0'
          - go-version: '1.20'
            otel-version: '1.28.0'
          - go-version: '1.20'
            otel-version: '1.29.0'

    steps:
    - uses: actions/checkout@v2
      with:
        path: 'go/src/github.com/bugsnag/bugsnag-go-performance' # relative to $GITHUB_WORKSPACE
    - name: set GOPATH
      if: matrix.os == 'ubuntu'
      run: |
        bash -c 'echo "GOPATH=$GITHUB_WORKSPACE/go" >> $GITHUB_ENV'
    - name: set GOPATH
      if: matrix.os == 'windows'
      run: |
        bash -c 'echo "GOPATH=$GITHUB_WORKSPACE\\\\go" >> $GITHUB_ENV'
    - name: set GO111MODULE
      run: |
        bash -c 'echo "GO111MODULE=on" >> $GITHUB_ENV'
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: install dependencies
      run: go get -v -d ./...
    - name: run tests
      run: go test $(go list ./... | grep -v /features/)
    - name: vet package
      # go1.12 vet shows spurious 'unknown identifier' issues
      if: matrix.go-version != '1.12'
      run: go vet $(go list ./... | grep -v /features/)

    - name: install integration dependencies
      if: matrix.os == 'ubuntu'
      run: |
        sudo apt-get update
        sudo apt-get install libcurl4-openssl-dev

    - name: install Ruby
      if: matrix.os == 'ubuntu'
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        working-directory: go/src/github.com/bugsnag/bugsnag-go-performance # relative to $GITHUB_WORKSPACE
    - name: maze tests
      working-directory: go/src/github.com/bugsnag/bugsnag-go-performance
      if: matrix.os == 'ubuntu'
      env:
        GO_VERSION: ${{ matrix.go-version }}
        OTEL_VERSION: ${{ matrix.otel-version }}
      run: DEBUG=1 bundle exec maze-runner
    - name: Upload maze_output.zip
      uses: actions/upload-artifact@v4
      with:
        name: maze_output.zip
        path: maze_output/maze_output.zip
